@using SFA.Apprenticeships.Domain.Entities.Vacancies.Apprenticeships
@model VacancyDetailViewModel
@{
    ViewBag.Title = "Apprenticeships - " + Model.Title;
    Layout = "~/Views/Shared/_ApprenticeshipLayout.cshtml";
}

@section metatags
{
    <meta name="DCSext.Days2Close" content="@((Model.ClosingDate - DateTime.Now).Days)"/>
}

<div itemscope itemtype="http://schema.org/JobPosting">
    <div class="grid-wrapper">
        <div class="grid grid-2-3">
            <div class="hgroup text">
                <h1 class="heading-xlarge" id="vacancy-title" itemprop="title">@Model.Title</h1>
                <p class="subtitle" id="vacancy-subtitle-employer-name" itemprop="hiringOrganization">@Model.EmployerName</p>
            </div>
        </div>
        <div class="grid grid-1-3">
            @if (ViewBag.SearchReturnUrl != null)
            {
                <a href="@ViewBag.SearchReturnUrl" title="Return to search results" class="page-link" id="lnk-return-search-results">Return to search results</a>
            }
            else
            {
                @Html.RouteLink("Find an apprenticeship", CandidateRouteNames.ApprenticeshipSearch, null, new { @id="lnk-find-apprenticeship", @class = "page-link" })
            }
        </div>
    </div>

    @if (!Model.HasError())
    {
        <section class="grid-wrapper">
            <div class="grid grid-2-3">
                <div class="inner-block-padr">
                    <div class="text" itemprop="description">
                        <p id="vacancy-description">@Model.Description</p>
                    </div>
                </div>
            </div>
            <div class="grid grid-1-3">
                @Html.Partial("_Apply", Model, new ViewDataDictionary() { new KeyValuePair<string, object>("AnalyticsButtonPosition", "Top")})
            </div>
        </section>
        <section class="section-border grid-wrapper" id="vacancy-info">
            <h2 class="heading-large">Apprenticeship summary</h2>
            <div class="grid grid-1-3">
                <div class="inner-block-padr">
                    <h3 class="bold-small">Weekly wage</h3>
                    <p id="vacancy-wage">@Model.Wage</p>

                    <h3 class="bold-small">Working week</h3>
                    <p id="vacancy-working-week" itemprop="workHours">@Model.WorkingWeek</p>
                    <h3 class="bold-small">Apprenticeship duration</h3>
                    <p id="vacancy-expected-duration">@(string.IsNullOrWhiteSpace(@Model.ExpectedDuration) ? "Not specified" : @Model.ExpectedDuration)</p>
                    <h3 class="bold-small">Possible start date</h3>
                    <p id="vacancy-start-date">@Html.DisplayFor(m => Model.StartDate)</p>
                    @if (Model.VacancyLocationType != ApprenticeshipLocationType.National && Model.Distance != null)
                    {
                        <h3 class="bold-small">Distance</h3>
                        <p id="vacancy-distance">@Model.Distance miles</p>
                    }
                    <h3 class="bold-small">Apprenticeship level</h3>
                    <p id="vacancy-type" itemprop="employmentType">@Model.ApprenticeshipLevel Level Apprenticeship</p>

                    <h3 class="bold-small">Reference number</h3>
                    <p id="vacancy-reference-id">@Model.VacancyReference</p>
                </div>
            </div>
            <div class="grid grid-2-3">
                <div class="text" itemprop="responsibilities">
                    <p id="vacancy-full-descrpition">@Html.Raw(Model.FullDescription)</p>
                </div>
            </div>

        </section>
        <section class="section-border grid-wrapper" id="course-info">
            <h2 class="heading-large">Requirements and prospects</h2>
            <div class="grid grid-1-2">
                <div class="inner-block-padr">
                    <div class="text">
                        @**Both Skills Required and Quals Required are optional - but displaying headers regardless*@
                        <h3 class="heading-small">Desired skills</h3>
                        <p id="vacancy-skills-required" itemprop="skills">@Html.Raw(Model.SkillsRequired)</p>
                        <h3 class="heading-small">Qualifications required</h3>
                        <p id="vacancy-qualifications-required" itemprop="qualifications">@Html.Raw(Model.QualificationRequired)</p>
                    </div>
                </div>
            </div>
            <div class="grid grid-1-2">
                <div class="text">
                    @if (!string.IsNullOrWhiteSpace(Model.FutureProspects))
                    {
                        <h3 class="heading-small">Future prospects</h3>
                        <p id="vacancy-future-prospects" itemprop="incentives">@Html.Raw(Model.FutureProspects)</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.RealityCheck))
                    {
                        <h3 class="heading-small">Things to consider</h3>
                        <p id="vacancy-reality-check" itemprop="incentives">@Html.Raw(Model.RealityCheck)</p>
                    }
                </div>
            </div>
        </section>
        <section class="section-border" id="employer-info">
            <h2 class="heading-large">About the employer</h2>
            @if (!Model.IsEmployerAnonymous)
            {
                <div class="text">
                    <p id="vacancy-employer-description">@Html.Raw(Model.EmployerDescription)</p>
                </div>
            }
            
            <div class="grid-wrapper">
                <div class="grid grid-1-2">
                    <div class="inner-block-padr">
                        <h3 class="bold-small">Employer</h3>
                            <p id="vacancy-employer-name" class="@(Model.IsWellFormedEmployerWebsiteUrl ? "no-btm-margin" : "")">@Model.EmployerName</p>
                            @if (Model.IsWellFormedEmployerWebsiteUrl)
                            {
                                <p><a itemprop="url" href="@Model.EmployerWebsite" id="vacancy-employer-website" target="_blank" title="@Model.EmployerName Website" rel="external">@Model.EmployerWebsite</a></p>
                            }
                            else
                            {
                                <p>@Model.EmployerWebsite</p>
                            }
                        @if (Model.VacancyLocationType != ApprenticeshipLocationType.National && !Model.IsMultiLocation)
                        {
                            <div id="vacancy-address" itemscope itemtype="http://schema.org/PostalAddress">
                                <h3 class="bold-small">Address</h3>
                                <div itemprop="address">
                                    <p class="small-btm-margin" itemprop="streetAddress">@Model.VacancyAddress.AddressLine1</p>
                                    <p class="small-btm-margin" itemprop="streetAddress">@Model.VacancyAddress.AddressLine2</p>
                                    <p class="small-btm-margin" itemprop="addressLocality">@Model.VacancyAddress.AddressLine3</p>
                                    <p class="small-btm-margin" itemprop="addressRegion">@Model.VacancyAddress.AddressLine4</p>
                                    <p class="small-btm-margin" itemprop="postalCode">@Model.VacancyAddress.Postcode</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="grid grid-1-2">
                    @if (Model.VacancyLocationType != ApprenticeshipLocationType.National && !Model.IsMultiLocation)
                    {
                        <div id="vacancy-map" class="ad-details__map">
                            <div class="map-overlay" onclick=" style.pointerEvents = 'none' "></div>
                            <iframe width="700" height="250" title="Map of location" style="border: 0" src="https://www.google.com/maps/embed/v1/place?q=@Html.Raw(Model.VacancyAddress.Postcode),+United+Kingdom&amp;key=AIzaSyCusA_0x4bJEjU-_gLOFiXMSBXKZYtvHz8"></iframe>
                            <p class="nojs-notice">You must have JavaScript enabled to view a map of the location</p>
                        </div>
                    }
                </div>
            </div>
        </section>
        <section class="section-border grid-wrapper" id="provider-info">
            <h2 class="heading-large">Training provider</h2>
            @if (Model.IsNasProvider)
            {
                <p id="vacancy-nas-provider">Training provider selection is currently in progress</p>
            }
            else
            {
                <div class="grid grid-2-3">
                    <div class="inner-block-padr">
                        <div class="text">
                            @if (!string.IsNullOrWhiteSpace(Model.TrainingToBeProvided))
                            {
                                <p id="vacancy-training-to-be-provided">@Html.Raw(Model.TrainingToBeProvided)</p>
                            }
                            <h3 class="heading-small">Apprenticeship framework</h3>
                            <p id="vacancy-framework">@Html.Raw(Model.Framework)</p>
                            @if (Model.ProviderSectorPassRate.HasValue)
                            {
                                <p id="vacancy-provider-sector-pass-rate">The training provider has achieved a sector success rate of @Model.ProviderSectorPassRate% for this type of apprenticeship training.</p>
                            }
                        </div>
                    </div>
                </div>
                <div class="grid grid-1-3">
                    <h3 class="bold-small">Training provider</h3>
                    <p id="vacancy-provider-name">@Model.ProviderName</p>
                
                    @if (!Model.IsRecruitmentAgencyAnonymous && !string.IsNullOrWhiteSpace(Model.RecruitmentAgency))
                    {
                       <p id="recruitment-agency-name">Applications for this apprenticeship are being processed by @Model.RecruitmentAgency</p>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Contact))
                    {
                        <h3 class="bold-small">Contact</h3>
                        <p id="vacancy-provider-contact">@Model.Contact</p>
                    }
                </div>
            }
        </section>

        if (!string.IsNullOrWhiteSpace(Model.OtherInformation))
        {
            <section id="other-information" class="section-border">
                <h2 class="heading-large collpanel-trigger">Other information</h2>
                <div class="text collpanel toggle-content">
                    <p>@Html.Raw(Model.OtherInformation)</p>
                </div>
            </section>
        }

        if (Model.ApplyViaEmployerWebsite && !string.IsNullOrWhiteSpace(Model.ApplicationInstructions))
        {      
            <section id="application-instructions-container" class="section-border">
                <h2 class="heading-large">Employer's Application Instructions</h2>
                <div class="text">
                    <p id="application-instructions">@Model.ApplicationInstructions</p>
                </div>
            </section>
        }
        
        if (!Model.ApplyViaEmployerWebsite && !Request.IsAuthenticated)
        {
            <section id="before-apply">
                <h2 class="heading-large">Before you apply</h2>
                <div class="text">
                    <p>Before you apply for an apprenticeship you must first create an account. If you already have an account you'll need to sign in.</p>
                </div>
            </section>
        }

        <section>
            <div class="form-group">
                @Html.Partial("_Apply", Model, new ViewDataDictionary() { new KeyValuePair<string, object>("AnalyticsButtonPosition", "Bottom")})
            </div>
        </section>
    }
</div>