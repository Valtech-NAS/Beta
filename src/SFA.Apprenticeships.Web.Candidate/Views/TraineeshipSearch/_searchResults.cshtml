@model TraineeshipSearchResponseViewModel

@if (Model.TotalHits > 0 )
{
    <fieldset>
        <legend class="visuallyhidden">Search items</legend>
        <div class="float-right-wrap">
            <div class="form-group form-group-compound">
                <label for="sort-results" class="heading-medium inline">Sort results</label>
                @Html.DropDownList("sortType", Model.SortTypes, new { @id = "sort-results" })
                <noscript>
                    <button class="button show-nojs" name="SearchAction" value="Sort">Sort</button>
                </noscript>
                <input id="SearchAction" name="SearchAction" value="Search" type="hidden" />
            </div>
        </div>
    </fieldset>
}
<ul class="search-results">
    @if (Model.Vacancies != null)
    {
        var itemPosition = 1 + (Model.PageSize * Model.PrevPage);
        foreach (var vacancy in Model.Vacancies)
        {
            var webTrendItemPositionTracker = "Webtrends.multiTrack({ element: this, argsa: ['DCS.dcsuri', '/traineeships/results/itemposition/" + vacancy.Id + "', 'WT.dl', '99', 'WT.ti', 'Traineeships Search – Item Position Clicked', 'DCSext.ipos', '" + itemPosition + "'] })";
            <li class="search-results__item section-border">
                <div class="hgroup-medium">
                    <h2 class="heading-medium vacancy-title-link">@Html.ActionLink(@vacancy.Title, "DetailsWithDistance", new { id = vacancy.Id, distance = vacancy.DistanceAsString }, new { @class = "vacancy-link", data_vacancy_id = vacancy.Id, onclick = webTrendItemPositionTracker, data_lat = vacancy.Location.Latitude, data_lon = vacancy.Location.Longitude })</h2>
                    <p class="subtitle">@vacancy.EmployerName</p>
                </div>
                <p>@vacancy.Description</p>
                <ul class="list-text no-btm-margin">
                    <li><b>Distance:</b> <span class="distance-value">@vacancy.DistanceAsString</span> miles</li>
                    <li><b>Closing date:</b> <span class="closing-date-value" data-date="@vacancy.ClosingDate.ToString("u")">@vacancy.ClosingDate.ToFriendlyClosingWeek()</span></li>
                    <li><b>Possible start date:</b> <span class="start-date-value">@Html.DisplayFor(m => vacancy.StartDate, "Date")</span></li>
                </ul>
            </li>
            itemPosition++;
        }
    }
</ul>

@{ Html.RenderPartial("_pagination", Model); }

@if (Model.TotalHits > 5)
{
<div class="form-group">
    <label for="results-per-page" class="heading-small inline">Display results</label>
    @Html.DropDownList("resultsPerPage", Model.ResultsPerPageSelectList, new { @id = "results-per-page" })
    <noscript>
        <button class="button show-nojs" name="ChangeResultsPerPageAction" value="ResultsPerPage">View</button>
    </noscript>
</div>
}